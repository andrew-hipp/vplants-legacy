//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2005.08.10 at 02:44:28 CDT 
//


package org.vplants.utils.jaxb.impl;

public class OtherRecordsTypeImpl implements org.vplants.utils.jaxb.OtherRecordsType, com.sun.xml.bind.JAXBObject, org.vplants.utils.jaxb.impl.runtime.UnmarshallableObject, org.vplants.utils.jaxb.impl.runtime.XMLSerializable, org.vplants.utils.jaxb.impl.runtime.ValidatableObject
{

    protected java.lang.String _InSk;
    protected java.lang.String _InNt;
    protected java.lang.String _WiRc;
    protected java.lang.String _IlWl;
    protected java.lang.String _IlKk;
    protected java.lang.String _WiWk;
    protected java.lang.String _MiBr;
    protected java.lang.String _IlDk;
    protected java.lang.String _WiWw;
    protected java.lang.String _WiKs;
    protected java.lang.String _IlKn;
    protected java.lang.String _InJs;
    protected java.lang.String _IlLk;
    protected java.lang.String _InLp;
    protected java.lang.String _WiMw;
    protected java.lang.String _IlKd;
    protected java.lang.String _IlDp;
    protected java.lang.String _IlMh;
    protected java.lang.String _IlBn;
    protected java.lang.String _IlGd;
    protected java.lang.String _InLk;
    protected java.lang.String _IlCk;
    protected java.lang.String _InPt;
    protected java.lang.String _InSj;
    public final static java.lang.Class version = (org.vplants.utils.jaxb.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (org.vplants.utils.jaxb.OtherRecordsType.class);
    }

    public java.lang.String getInSk() {
        return _InSk;
    }

    public void setInSk(java.lang.String value) {
        _InSk = value;
    }

    public java.lang.String getInNt() {
        return _InNt;
    }

    public void setInNt(java.lang.String value) {
        _InNt = value;
    }

    public java.lang.String getWiRc() {
        return _WiRc;
    }

    public void setWiRc(java.lang.String value) {
        _WiRc = value;
    }

    public java.lang.String getIlWl() {
        return _IlWl;
    }

    public void setIlWl(java.lang.String value) {
        _IlWl = value;
    }

    public java.lang.String getIlKk() {
        return _IlKk;
    }

    public void setIlKk(java.lang.String value) {
        _IlKk = value;
    }

    public java.lang.String getWiWk() {
        return _WiWk;
    }

    public void setWiWk(java.lang.String value) {
        _WiWk = value;
    }

    public java.lang.String getMiBr() {
        return _MiBr;
    }

    public void setMiBr(java.lang.String value) {
        _MiBr = value;
    }

    public java.lang.String getIlDk() {
        return _IlDk;
    }

    public void setIlDk(java.lang.String value) {
        _IlDk = value;
    }

    public java.lang.String getWiWw() {
        return _WiWw;
    }

    public void setWiWw(java.lang.String value) {
        _WiWw = value;
    }

    public java.lang.String getWiKs() {
        return _WiKs;
    }

    public void setWiKs(java.lang.String value) {
        _WiKs = value;
    }

    public java.lang.String getIlKn() {
        return _IlKn;
    }

    public void setIlKn(java.lang.String value) {
        _IlKn = value;
    }

    public java.lang.String getInJs() {
        return _InJs;
    }

    public void setInJs(java.lang.String value) {
        _InJs = value;
    }

    public java.lang.String getIlLk() {
        return _IlLk;
    }

    public void setIlLk(java.lang.String value) {
        _IlLk = value;
    }

    public java.lang.String getInLp() {
        return _InLp;
    }

    public void setInLp(java.lang.String value) {
        _InLp = value;
    }

    public java.lang.String getWiMw() {
        return _WiMw;
    }

    public void setWiMw(java.lang.String value) {
        _WiMw = value;
    }

    public java.lang.String getIlKd() {
        return _IlKd;
    }

    public void setIlKd(java.lang.String value) {
        _IlKd = value;
    }

    public java.lang.String getIlDp() {
        return _IlDp;
    }

    public void setIlDp(java.lang.String value) {
        _IlDp = value;
    }

    public java.lang.String getIlMh() {
        return _IlMh;
    }

    public void setIlMh(java.lang.String value) {
        _IlMh = value;
    }

    public java.lang.String getIlBn() {
        return _IlBn;
    }

    public void setIlBn(java.lang.String value) {
        _IlBn = value;
    }

    public java.lang.String getIlGd() {
        return _IlGd;
    }

    public void setIlGd(java.lang.String value) {
        _IlGd = value;
    }

    public java.lang.String getInLk() {
        return _InLk;
    }

    public void setInLk(java.lang.String value) {
        _InLk = value;
    }

    public java.lang.String getIlCk() {
        return _IlCk;
    }

    public void setIlCk(java.lang.String value) {
        _IlCk = value;
    }

    public java.lang.String getInPt() {
        return _InPt;
    }

    public void setInPt(java.lang.String value) {
        _InPt = value;
    }

    public java.lang.String getInSj() {
        return _InSj;
    }

    public void setInSj(java.lang.String value) {
        _InSj = value;
    }

    public org.vplants.utils.jaxb.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.vplants.utils.jaxb.impl.runtime.UnmarshallingContext context) {
        return new org.vplants.utils.jaxb.impl.OtherRecordsTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(org.vplants.utils.jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("", "ilBn");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _IlBn), "IlBn");
        } catch (java.lang.Exception e) {
            org.vplants.utils.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "ilCk");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _IlCk), "IlCk");
        } catch (java.lang.Exception e) {
            org.vplants.utils.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "ilDk");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _IlDk), "IlDk");
        } catch (java.lang.Exception e) {
            org.vplants.utils.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "ilDp");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _IlDp), "IlDp");
        } catch (java.lang.Exception e) {
            org.vplants.utils.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "ilGd");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _IlGd), "IlGd");
        } catch (java.lang.Exception e) {
            org.vplants.utils.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "ilKd");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _IlKd), "IlKd");
        } catch (java.lang.Exception e) {
            org.vplants.utils.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "ilKk");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _IlKk), "IlKk");
        } catch (java.lang.Exception e) {
            org.vplants.utils.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "ilKn");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _IlKn), "IlKn");
        } catch (java.lang.Exception e) {
            org.vplants.utils.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "ilLk");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _IlLk), "IlLk");
        } catch (java.lang.Exception e) {
            org.vplants.utils.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "ilMh");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _IlMh), "IlMh");
        } catch (java.lang.Exception e) {
            org.vplants.utils.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "ilWl");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _IlWl), "IlWl");
        } catch (java.lang.Exception e) {
            org.vplants.utils.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "inJs");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _InJs), "InJs");
        } catch (java.lang.Exception e) {
            org.vplants.utils.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "inLk");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _InLk), "InLk");
        } catch (java.lang.Exception e) {
            org.vplants.utils.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "inLp");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _InLp), "InLp");
        } catch (java.lang.Exception e) {
            org.vplants.utils.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "inNt");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _InNt), "InNt");
        } catch (java.lang.Exception e) {
            org.vplants.utils.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "inPt");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _InPt), "InPt");
        } catch (java.lang.Exception e) {
            org.vplants.utils.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "inSj");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _InSj), "InSj");
        } catch (java.lang.Exception e) {
            org.vplants.utils.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "inSk");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _InSk), "InSk");
        } catch (java.lang.Exception e) {
            org.vplants.utils.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "miBr");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _MiBr), "MiBr");
        } catch (java.lang.Exception e) {
            org.vplants.utils.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "wiKs");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _WiKs), "WiKs");
        } catch (java.lang.Exception e) {
            org.vplants.utils.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "wiMw");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _WiMw), "WiMw");
        } catch (java.lang.Exception e) {
            org.vplants.utils.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "wiRc");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _WiRc), "WiRc");
        } catch (java.lang.Exception e) {
            org.vplants.utils.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "wiWk");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _WiWk), "WiWk");
        } catch (java.lang.Exception e) {
            org.vplants.utils.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "wiWw");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _WiWw), "WiWw");
        } catch (java.lang.Exception e) {
            org.vplants.utils.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
    }

    public void serializeAttributes(org.vplants.utils.jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(org.vplants.utils.jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (org.vplants.utils.jaxb.OtherRecordsType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001e"
+"com.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclared"
+"AttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.m"
+"sv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/D"
+"atatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair"
+";xq\u0000~\u0000\u0003ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z"
+"\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicTyp"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000"
+"\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000)L\u0000\nwhiteSp"
+"acet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 htt"
+"p://www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun.msv.dataty"
+"pe.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.ms"
+"v.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun."
+"msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003pps"
+"r\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000)L\u0000"
+"\fnamespaceURIq\u0000~\u0000)xpq\u0000~\u0000-q\u0000~\u0000,sr\u0000\u001dcom.sun.msv.grammar.Choice"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u001dxq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boo"
+"lean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000!ppsr\u0000\"com.sun.msv.datatype."
+"xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000&q\u0000~\u0000,t\u0000\u0005QNamesr\u00005com.sun.msv.d"
+"atatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000/q\u0000~"
+"\u00002sq\u0000~\u00003q\u0000~\u0000>q\u0000~\u0000,sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000)L\u0000\fnamespaceURIq\u0000~\u0000)xr\u0000\u001dcom.sun.msv"
+".grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2"
+"001/XMLSchema-instancesr\u00000com.sun.msv.grammar.Expression$Eps"
+"ilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u00009\u0001q\u0000~\u0000Hsq\u0000~\u0000Bt\u0000\u0004ilBnt\u0000\u0000s"
+"q\u0000~\u0000\u001cpp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000$sq\u0000~\u00005ppsq\u0000~\u00007q\u0000~\u0000:pq\u0000~\u0000;q\u0000~\u0000Dq\u0000~\u0000Hsq\u0000~"
+"\u0000Bt\u0000\u0004ilCkq\u0000~\u0000Lsq\u0000~\u0000\u001cpp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000$sq\u0000~\u00005ppsq\u0000~\u00007q\u0000~\u0000:pq\u0000~\u0000"
+";q\u0000~\u0000Dq\u0000~\u0000Hsq\u0000~\u0000Bt\u0000\u0004ilDkq\u0000~\u0000Lsq\u0000~\u0000\u001cpp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000$sq\u0000~\u00005pps"
+"q\u0000~\u00007q\u0000~\u0000:pq\u0000~\u0000;q\u0000~\u0000Dq\u0000~\u0000Hsq\u0000~\u0000Bt\u0000\u0004ilDpq\u0000~\u0000Lsq\u0000~\u0000\u001cpp\u0000sq\u0000~\u0000\u0000p"
+"pq\u0000~\u0000$sq\u0000~\u00005ppsq\u0000~\u00007q\u0000~\u0000:pq\u0000~\u0000;q\u0000~\u0000Dq\u0000~\u0000Hsq\u0000~\u0000Bt\u0000\u0004ilGdq\u0000~\u0000Ls"
+"q\u0000~\u0000\u001cpp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000$sq\u0000~\u00005ppsq\u0000~\u00007q\u0000~\u0000:pq\u0000~\u0000;q\u0000~\u0000Dq\u0000~\u0000Hsq\u0000~"
+"\u0000Bt\u0000\u0004ilKdq\u0000~\u0000Lsq\u0000~\u0000\u001cpp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000$sq\u0000~\u00005ppsq\u0000~\u00007q\u0000~\u0000:pq\u0000~\u0000"
+";q\u0000~\u0000Dq\u0000~\u0000Hsq\u0000~\u0000Bt\u0000\u0004ilKkq\u0000~\u0000Lsq\u0000~\u0000\u001cpp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000$sq\u0000~\u00005pps"
+"q\u0000~\u00007q\u0000~\u0000:pq\u0000~\u0000;q\u0000~\u0000Dq\u0000~\u0000Hsq\u0000~\u0000Bt\u0000\u0004ilKnq\u0000~\u0000Lsq\u0000~\u0000\u001cpp\u0000sq\u0000~\u0000\u0000p"
+"pq\u0000~\u0000$sq\u0000~\u00005ppsq\u0000~\u00007q\u0000~\u0000:pq\u0000~\u0000;q\u0000~\u0000Dq\u0000~\u0000Hsq\u0000~\u0000Bt\u0000\u0004ilLkq\u0000~\u0000Ls"
+"q\u0000~\u0000\u001cpp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000$sq\u0000~\u00005ppsq\u0000~\u00007q\u0000~\u0000:pq\u0000~\u0000;q\u0000~\u0000Dq\u0000~\u0000Hsq\u0000~"
+"\u0000Bt\u0000\u0004ilMhq\u0000~\u0000Lsq\u0000~\u0000\u001cpp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000$sq\u0000~\u00005ppsq\u0000~\u00007q\u0000~\u0000:pq\u0000~\u0000"
+";q\u0000~\u0000Dq\u0000~\u0000Hsq\u0000~\u0000Bt\u0000\u0004ilWlq\u0000~\u0000Lsq\u0000~\u0000\u001cpp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000$sq\u0000~\u00005pps"
+"q\u0000~\u00007q\u0000~\u0000:pq\u0000~\u0000;q\u0000~\u0000Dq\u0000~\u0000Hsq\u0000~\u0000Bt\u0000\u0004inJsq\u0000~\u0000Lsq\u0000~\u0000\u001cpp\u0000sq\u0000~\u0000\u0000p"
+"pq\u0000~\u0000$sq\u0000~\u00005ppsq\u0000~\u00007q\u0000~\u0000:pq\u0000~\u0000;q\u0000~\u0000Dq\u0000~\u0000Hsq\u0000~\u0000Bt\u0000\u0004inLkq\u0000~\u0000Ls"
+"q\u0000~\u0000\u001cpp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000$sq\u0000~\u00005ppsq\u0000~\u00007q\u0000~\u0000:pq\u0000~\u0000;q\u0000~\u0000Dq\u0000~\u0000Hsq\u0000~"
+"\u0000Bt\u0000\u0004inLpq\u0000~\u0000Lsq\u0000~\u0000\u001cpp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000$sq\u0000~\u00005ppsq\u0000~\u00007q\u0000~\u0000:pq\u0000~\u0000"
+";q\u0000~\u0000Dq\u0000~\u0000Hsq\u0000~\u0000Bt\u0000\u0004inNtq\u0000~\u0000Lsq\u0000~\u0000\u001cpp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000$sq\u0000~\u00005pps"
+"q\u0000~\u00007q\u0000~\u0000:pq\u0000~\u0000;q\u0000~\u0000Dq\u0000~\u0000Hsq\u0000~\u0000Bt\u0000\u0004inPtq\u0000~\u0000Lsq\u0000~\u0000\u001cpp\u0000sq\u0000~\u0000\u0000p"
+"pq\u0000~\u0000$sq\u0000~\u00005ppsq\u0000~\u00007q\u0000~\u0000:pq\u0000~\u0000;q\u0000~\u0000Dq\u0000~\u0000Hsq\u0000~\u0000Bt\u0000\u0004inSjq\u0000~\u0000Ls"
+"q\u0000~\u0000\u001cpp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000$sq\u0000~\u00005ppsq\u0000~\u00007q\u0000~\u0000:pq\u0000~\u0000;q\u0000~\u0000Dq\u0000~\u0000Hsq\u0000~"
+"\u0000Bt\u0000\u0004inSkq\u0000~\u0000Lsq\u0000~\u0000\u001cpp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000$sq\u0000~\u00005ppsq\u0000~\u00007q\u0000~\u0000:pq\u0000~\u0000"
+";q\u0000~\u0000Dq\u0000~\u0000Hsq\u0000~\u0000Bt\u0000\u0004miBrq\u0000~\u0000Lsq\u0000~\u0000\u001cpp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000$sq\u0000~\u00005pps"
+"q\u0000~\u00007q\u0000~\u0000:pq\u0000~\u0000;q\u0000~\u0000Dq\u0000~\u0000Hsq\u0000~\u0000Bt\u0000\u0004wiKsq\u0000~\u0000Lsq\u0000~\u0000\u001cpp\u0000sq\u0000~\u0000\u0000p"
+"pq\u0000~\u0000$sq\u0000~\u00005ppsq\u0000~\u00007q\u0000~\u0000:pq\u0000~\u0000;q\u0000~\u0000Dq\u0000~\u0000Hsq\u0000~\u0000Bt\u0000\u0004wiMwq\u0000~\u0000Ls"
+"q\u0000~\u0000\u001cpp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000$sq\u0000~\u00005ppsq\u0000~\u00007q\u0000~\u0000:pq\u0000~\u0000;q\u0000~\u0000Dq\u0000~\u0000Hsq\u0000~"
+"\u0000Bt\u0000\u0004wiRcq\u0000~\u0000Lsq\u0000~\u0000\u001cpp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000$sq\u0000~\u00005ppsq\u0000~\u00007q\u0000~\u0000:pq\u0000~\u0000"
+";q\u0000~\u0000Dq\u0000~\u0000Hsq\u0000~\u0000Bt\u0000\u0004wiWkq\u0000~\u0000Lsq\u0000~\u0000\u001cpp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000$sq\u0000~\u00005pps"
+"q\u0000~\u00007q\u0000~\u0000:pq\u0000~\u0000;q\u0000~\u0000Dq\u0000~\u0000Hsq\u0000~\u0000Bt\u0000\u0004wiWwq\u0000~\u0000Lsr\u0000\"com.sun.msv."
+"grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/"
+"grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar."
+"ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersion"
+"L\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000G\u0001pq\u0000~\u0000"
+"\u0015q\u0000~\u0000\tq\u0000~\u0000\nq\u0000~\u0000\u0016q\u0000~\u0000\u000bq\u0000~\u0000\u00bbq\u0000~\u0000\u00b5q\u0000~\u0000\u00afq\u0000~\u0000\u00a9q\u0000~\u0000\u00a3q\u0000~\u0000\u009dq\u0000~\u0000\u0097q\u0000~\u0000"
+"\u0091q\u0000~\u0000\u008bq\u0000~\u0000\u0085q\u0000~\u0000\u007fq\u0000~\u0000yq\u0000~\u0000sq\u0000~\u0000mq\u0000~\u0000gq\u0000~\u0000aq\u0000~\u0000[q\u0000~\u0000\u0010q\u0000~\u0000Uq\u0000~\u0000"
+"Oq\u0000~\u00006q\u0000~\u0000\u0017q\u0000~\u0000\u00c1q\u0000~\u0000\u00c7q\u0000~\u0000\u00cdq\u0000~\u0000\u00d3q\u0000~\u0000\rq\u0000~\u0000\u00b4q\u0000~\u0000\u00aeq\u0000~\u0000\u00a8q\u0000~\u0000\u00a2q\u0000~\u0000"
+"\u009cq\u0000~\u0000\u0096q\u0000~\u0000\u0090q\u0000~\u0000\u008aq\u0000~\u0000\u0084q\u0000~\u0000~q\u0000~\u0000xq\u0000~\u0000rq\u0000~\u0000lq\u0000~\u0000fq\u0000~\u0000`q\u0000~\u0000Zq\u0000~\u0000"
+"Tq\u0000~\u0000Nq\u0000~\u0000 q\u0000~\u0000\u0019q\u0000~\u0000\u00baq\u0000~\u0000\u00c0q\u0000~\u0000\u00c6q\u0000~\u0000\u00ccq\u0000~\u0000\u00d2q\u0000~\u0000\u000eq\u0000~\u0000\u001aq\u0000~\u0000\u000fq\u0000~\u0000"
+"\u001bq\u0000~\u0000\u0014q\u0000~\u0000\bq\u0000~\u0000\u0011q\u0000~\u0000\u0005q\u0000~\u0000\u0012q\u0000~\u0000\u0006q\u0000~\u0000\u0013q\u0000~\u0000\fq\u0000~\u0000\u0007q\u0000~\u0000\u0018x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends org.vplants.utils.jaxb.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(org.vplants.utils.jaxb.impl.runtime.UnmarshallingContext context) {
            super(context, "-------------------------------------------------------------------------");
        }

        protected Unmarshaller(org.vplants.utils.jaxb.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return org.vplants.utils.jaxb.impl.OtherRecordsTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        if (("ilDk" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        break;
                    case  45 :
                        if (("inPt" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 46;
                            return ;
                        }
                        break;
                    case  24 :
                        if (("ilLk" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 25;
                            return ;
                        }
                        break;
                    case  66 :
                        if (("wiWk" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 67;
                            return ;
                        }
                        break;
                    case  21 :
                        if (("ilKn" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 22;
                            return ;
                        }
                        break;
                    case  69 :
                        if (("wiWw" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 70;
                            return ;
                        }
                        break;
                    case  42 :
                        if (("inNt" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 43;
                            return ;
                        }
                        break;
                    case  60 :
                        if (("wiMw" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 61;
                            return ;
                        }
                        break;
                    case  12 :
                        if (("ilGd" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        break;
                    case  30 :
                        if (("ilWl" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 31;
                            return ;
                        }
                        break;
                    case  36 :
                        if (("inLk" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 37;
                            return ;
                        }
                        break;
                    case  48 :
                        if (("inSj" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 49;
                            return ;
                        }
                        break;
                    case  27 :
                        if (("ilMh" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 28;
                            return ;
                        }
                        break;
                    case  39 :
                        if (("inLp" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 40;
                            return ;
                        }
                        break;
                    case  51 :
                        if (("inSk" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 52;
                            return ;
                        }
                        break;
                    case  0 :
                        if (("ilBn" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 1;
                            return ;
                        }
                        break;
                    case  72 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  57 :
                        if (("wiKs" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 58;
                            return ;
                        }
                        break;
                    case  3 :
                        if (("ilCk" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        break;
                    case  18 :
                        if (("ilKk" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 19;
                            return ;
                        }
                        break;
                    case  15 :
                        if (("ilKd" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 16;
                            return ;
                        }
                        break;
                    case  54 :
                        if (("miBr" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 55;
                            return ;
                        }
                        break;
                    case  9 :
                        if (("ilDp" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        break;
                    case  63 :
                        if (("wiRc" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 64;
                            return ;
                        }
                        break;
                    case  33 :
                        if (("inJs" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 34;
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  11 :
                        if (("ilDp" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  65 :
                        if (("wiRc" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 66;
                            return ;
                        }
                        break;
                    case  8 :
                        if (("ilDk" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  53 :
                        if (("inSk" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 54;
                            return ;
                        }
                        break;
                    case  71 :
                        if (("wiWw" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 72;
                            return ;
                        }
                        break;
                    case  35 :
                        if (("inJs" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 36;
                            return ;
                        }
                        break;
                    case  68 :
                        if (("wiWk" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 69;
                            return ;
                        }
                        break;
                    case  47 :
                        if (("inPt" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 48;
                            return ;
                        }
                        break;
                    case  41 :
                        if (("inLp" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 42;
                            return ;
                        }
                        break;
                    case  72 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  20 :
                        if (("ilKk" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  17 :
                        if (("ilKd" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  56 :
                        if (("miBr" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 57;
                            return ;
                        }
                        break;
                    case  5 :
                        if (("ilCk" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  26 :
                        if (("ilLk" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 27;
                            return ;
                        }
                        break;
                    case  50 :
                        if (("inSj" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 51;
                            return ;
                        }
                        break;
                    case  38 :
                        if (("inLk" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 39;
                            return ;
                        }
                        break;
                    case  44 :
                        if (("inNt" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 45;
                            return ;
                        }
                        break;
                    case  62 :
                        if (("wiMw" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 63;
                            return ;
                        }
                        break;
                    case  23 :
                        if (("ilKn" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 24;
                            return ;
                        }
                        break;
                    case  14 :
                        if (("ilGd" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  32 :
                        if (("ilWl" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 33;
                            return ;
                        }
                        break;
                    case  2 :
                        if (("ilBn" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  29 :
                        if (("ilMh" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 30;
                            return ;
                        }
                        break;
                    case  59 :
                        if (("wiKs" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 60;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  72 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  72 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  40 :
                            eatText1(value);
                            state = 41;
                            return ;
                        case  43 :
                            eatText2(value);
                            state = 44;
                            return ;
                        case  46 :
                            eatText3(value);
                            state = 47;
                            return ;
                        case  64 :
                            eatText4(value);
                            state = 65;
                            return ;
                        case  61 :
                            eatText5(value);
                            state = 62;
                            return ;
                        case  28 :
                            eatText6(value);
                            state = 29;
                            return ;
                        case  13 :
                            eatText7(value);
                            state = 14;
                            return ;
                        case  16 :
                            eatText8(value);
                            state = 17;
                            return ;
                        case  7 :
                            eatText9(value);
                            state = 8;
                            return ;
                        case  25 :
                            eatText10(value);
                            state = 26;
                            return ;
                        case  10 :
                            eatText11(value);
                            state = 11;
                            return ;
                        case  72 :
                            revertToParentFromText(value);
                            return ;
                        case  22 :
                            eatText12(value);
                            state = 23;
                            return ;
                        case  52 :
                            eatText13(value);
                            state = 53;
                            return ;
                        case  1 :
                            eatText14(value);
                            state = 2;
                            return ;
                        case  55 :
                            eatText15(value);
                            state = 56;
                            return ;
                        case  37 :
                            eatText16(value);
                            state = 38;
                            return ;
                        case  58 :
                            eatText17(value);
                            state = 59;
                            return ;
                        case  34 :
                            eatText18(value);
                            state = 35;
                            return ;
                        case  4 :
                            eatText19(value);
                            state = 5;
                            return ;
                        case  31 :
                            eatText20(value);
                            state = 32;
                            return ;
                        case  49 :
                            eatText21(value);
                            state = 50;
                            return ;
                        case  19 :
                            eatText22(value);
                            state = 20;
                            return ;
                        case  67 :
                            eatText23(value);
                            state = 68;
                            return ;
                        case  70 :
                            eatText24(value);
                            state = 71;
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _InLp = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _InNt = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _InPt = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _WiRc = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _WiMw = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IlMh = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IlGd = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IlKd = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText9(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IlDk = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText10(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IlLk = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText11(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IlDp = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText12(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IlKn = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText13(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _InSk = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText14(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IlBn = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText15(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MiBr = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText16(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _InLk = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText17(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _WiKs = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText18(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _InJs = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText19(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IlCk = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText20(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IlWl = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText21(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _InSj = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText22(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IlKk = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText23(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _WiWk = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText24(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _WiWw = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
