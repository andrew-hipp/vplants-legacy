<?xml version="1.0"?>
<SPM connection="{@dbconnection}" xmlns:xsql="urn:oracle-xsql">

<TEXT>

<SCINAMES>

<xsql:query rowset-element="ACCEPTED" row-element="">
SELECT 
        ACC.GENUS,
        ACC.SPECIES,
        ACC.AUTHOR,
        ACC.SSP,
        ACC.SSP_AUTHOR,
        ACC.VAR,
        ACC.VAR_AUTHOR,
        ACC.F AS FMA,
        ACC.F_AUTHOR AS FMA_AUTHOR
FROM 
	SPECIMEN SP,
	CHECKLIST ACC,
	CHECKLIST STR
WHERE 
	SP.SPM_ID = '{@spmid}' AND
	SP.HERB_CD = '{@herb}' AND
        STR.NAME_CD = SP.NAME_CD AND
	STR.GROUP_ID IN (
		SELECT MAX(GROUP_ID) 
		FROM CHECKLIST
		WHERE NAME_CD = SP.NAME_CD
	) AND
        ACC.GROUP_ID = STR.GROUP_ID AND
	ACC.ACCEPTED_IND = 'Y'
</xsql:query>

<xsql:query rowset-element="STORED" row-element="">
SELECT 
    	CD.CODE_TEXT HERB, 
        STR.GENUS,
        STR.SPECIES,
        STR.AUTHOR,
        STR.SSP,
        STR.SSP_AUTHOR,
        STR.VAR,
        STR.VAR_AUTHOR,
        STR.F AS FMA,
        STR.F_AUTHOR AS FMA_AUTHOR
FROM 
	SPECIMEN SP,
	CHECKLIST STR,
    	CD_CODE CD
WHERE 
	SP.SPM_ID = '{@spmid}' AND
	SP.HERB_CD = '{@herb}' AND
        STR.NAME_CD = SP.NAME_CD AND
	STR.GROUP_ID IN (
		SELECT MAX(GROUP_ID) 
		FROM CHECKLIST
		WHERE NAME_CD = SP.NAME_CD
	) AND
    	CD.CODE_ID = 1 AND
    	CD.CODE_CD = SP.HERB_CD
</xsql:query>

<xsql:query rowset-element="EXTRAS" row-element="">
SELECT 
	UPPER(ACC.FAMILY_NAME) AS FAMILY,
	CNAME_FUNC(ACC.GROUP_ID) AS COMMON_NAME,
	ACC.INVASIVE,
	RE_FUNC(ACC.GROUP_ID) AS RE_STATUS
FROM 
	SPECIMEN SP,
	CHECKLIST ACC,
	CHECKLIST STR
WHERE 
	SP.SPM_ID = '{@spmid}' AND
	SP.HERB_CD = '{@herb}' AND
        STR.NAME_CD = SP.NAME_CD AND
	STR.GROUP_ID IN (
		SELECT MAX(GROUP_ID) 
		FROM CHECKLIST
		WHERE NAME_CD = SP.NAME_CD
	) AND
        ACC.GROUP_ID = STR.GROUP_ID AND
	ACC.ACCEPTED_IND = 'Y'
</xsql:query>

</SCINAMES>

<xsql:query rowset-element="DTL" row-element="">
SELECT
    CD.CODE_TEXT HERB_TEXT, 
    SPM.SPM_ID,
    TO_CHAR(SPM.COLL_DATE, DECODE(SPM.COLL_DATE_MASK,
              3, 'DD Mon YYYY',
              2, 'Mon YYYY',
              1, 'YYYY',
              null)) FMT_COLL_DATE,
    GEO.COUNTY AS COUNTY,
    UPPER(GEO.STATE) AS STATE,
    NVL2(RE_FUNC(CHK.GROUP_ID),'',GEO.CITY) AS CITY,
    NVL2(RE_FUNC(CHK.GROUP_ID),'',GEO.TOWNSHIP) AS TOWNSHIP,
    CURSOR(
      SELECT
        L_NAME, 
        F_NAME,
        M_NAME,
        PRIMARY_IND
      FROM
        COLLECTOR
      WHERE
        SPM_ID = '{@spmid}' AND
        HERB_CD = '{@herb}'
      ORDER BY
	4 DESC, 1, 2, 3
    ) COLLS,
    SPM.COLL_NBR,
    NVL2(RE_FUNC(CHK.GROUP_ID),'',HAB.HABITAT) AS HABITAT,
    NVL2(RE_FUNC(CHK.GROUP_ID),'(Location blocked)',LOC.LOCALITY) AS LOCALITY,
    CURSOR(
     SELECT
      TRS.TWP,
      TRS.TWP_DIR,
      TRS.RNG,
      TRS.RNG_DIR,
      TRS.SECT,
      TRS.SECT_CMTS
     FROM
      SITE_SURVEY TRS
     WHERE
      TRS.SPM_ID = SPM.SPM_ID AND
      TRS.HERB_CD = SPM.HERB_CD
    ) TRS,
    CURSOR(
     SELECT
      GPS.LAT_DD,
      GPS.LAT_DIR,
      GPS.LONG_DD,
      GPS.LONG_DIR
     FROM
      SITE_GLOBAL GPS
     WHERE
      GPS.SPM_ID = SPM.SPM_ID AND
      GPS.HERB_CD = SPM.HERB_CD
    ) GPS,
    PAGE.URI HOMEPAGE,
    CURSOR(
     SELECT
      DECODE(PAGE.MORE_LOC, 'N ', NULL, PAGE.MORE_LOC) MORE_LOC,
      DECODE(PAGE.MORE_HAB, 'N ', NULL, PAGE.MORE_HAB) MORE_HAB,
      DECODE(PAGE.MORE_DESC, 'N ', NULL, PAGE.MORE_DESC) MORE_DESC,
      DECODE(PAGE.MORE_ASSOC, 'N ', NULL, PAGE.MORE_ASSOC) MORE_ASSOC,
      DECODE(PAGE.MORE_ANNOT, 'N ', NULL, PAGE.MORE_ANNOT) MORE_ANNOT
     FROM
      SPM_PAGE PAGE
     WHERE
      PAGE.SPM_ID = SPM.SPM_ID AND
      PAGE.HERB_CD = SPM.HERB_CD AND
      (
	PAGE.MORE_LOC != 'N' OR
	PAGE.MORE_HAB != 'N' OR
	PAGE.MORE_DESC != 'N' OR
	PAGE.MORE_ASSOC != 'N' OR
	PAGE.MORE_ANNOT != 'N'
      )
    ) MORE_DATA 
FROM
    SPECIMEN SPM,
    CD_CODE CD,
    SITE_GEO GEO,
    HABITAT HAB,
    LOCALITY LOC,
    SPM_PAGE PAGE,
    CHECKLIST CHK
WHERE
    SPM.SPM_ID = '{@spmid}' AND
    SPM.HERB_CD = '{@herb}' AND
    CD.CODE_ID = 1 AND
    CD.CODE_CD = SPM.HERB_CD AND
    GEO.SPM_ID (+) = SPM.SPM_ID AND
    GEO.HERB_CD (+) = SPM.HERB_CD AND
    HAB.SPM_ID (+) = SPM.SPM_ID AND
    HAB.HERB_CD (+) = SPM.HERB_CD AND
    LOC.SPM_ID (+) = SPM.SPM_ID AND
    LOC.HERB_CD (+) = SPM.HERB_CD AND
    PAGE.SPM_ID (+) = SPM.SPM_ID AND
    PAGE.HERB_CD (+) = SPM.HERB_CD AND
    CHK.NAME_CD = SPM.NAME_CD
	
</xsql:query>

<xsql:query rowset-element="GALLERY" row-element="IMAGE">
SELECT
    IMG.TYPE_CD,
    IMG.URI,
    DECODE(IMG.FORMAT_CD, 'JP', 'JPG', 'SD', 'MrSID', '') FORMAT
FROM
    SPECIMEN SPM, SPM_IMAGE IMG    
WHERE
    SPM.SPM_ID = '{@spmid}' AND
    SPM.HERB_CD = '{@herb}' AND
    IMG.SPM_ID = SPM.SPM_ID AND
    IMG.HERB_CD = SPM.HERB_CD AND
    IMG.TYPE_CD != 'SP'
ORDER BY
    DECODE(IMG.FORMAT_CD, 'JP', 0, 1)
</xsql:query>

</TEXT>

<IMAGES>

<xsql:query rowset-element="PREVIEW" row-element="">
SELECT
    IMG.URI
FROM
    SPECIMEN SPM, SPM_IMAGE IMG    
WHERE
    SPM.SPM_ID = '{@spmid}' AND
    SPM.HERB_CD = '{@herb}' AND
    IMG.SPM_ID = SPM.SPM_ID AND
    IMG.HERB_CD = SPM.HERB_CD AND
    IMG.TYPE_CD = 'SP'
</xsql:query>

</IMAGES>

</SPM>
